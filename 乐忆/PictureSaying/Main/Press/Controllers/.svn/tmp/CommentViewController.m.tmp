//
//  CommentViewController.m
//  Comment
//
//  Created by tutu on 14/12/10.
//  Copyright (c) 2014年 tutu. All rights reserved.
//  评论

#import "CommentViewController.h"
#import "AppDelegate.h"
#import "HeaderViewCell.h"
#import "CommentViewCell.h"
#import "UIViewExt.h"
#import "DataService.h"
#import "MBProgressHUD.h"
#import "PSConfigs.h"
#import "NSDate+Additions.h"
#import "UIImage+HB.h"
#import "UIScrollView+MJRefresh.h"
#import "PSConfigs.h"

#define kScreenWidth [UIScreen mainScreen].bounds.size.width
#define kScreenHeight [UIScreen mainScreen].bounds.size.height
@interface CommentViewController ()<UITableViewDelegate,UITableViewDataSource,UITextFieldDelegate>
{
    Info *info;
    int count;
    NSMutableArray *_data;
    MBProgressHUD *_hud;
    NSMutableArray *_useid;
}
@property(nonatomic,strong)UITableView *tv;
@property(nonatomic,strong)UIView *v;

@end

@implementation CommentViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(likeStatusRefresh:) name:kPSLikeStatusChangeNotification object:nil];
    //cell数据源
    _data =  [NSMutableArray array];
    //回复id数组
    _useid = [NSMutableArray array];
    self.title = @"评论";
    //tabview
    self.tv = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth, kScreenHeight-64-kScreenHeight*.1)];
    self.tv.backgroundColor = [UIColor whiteColor];
    self.tv.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.tv.delegate = self;
    self.tv.dataSource = self;
    [self.view addSubview:self.tv];
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(dian:)];
    [self.tv addGestureRecognizer:tap];
    
    //发送底部框
    self.v = [[UIView alloc]init];
    self.v.frame = CGRectMake(0, kScreenHeight*0.9-64,kScreenWidth ,kScreenHeight*0.1 );
    self.v.backgroundColor = [UIColor colorWithRed:235/255.0 green:235/255.0 blue:235/255.0 alpha:1];
    [self.view addSubview:self.v];
    
    self.tf = [[UITextField alloc]init];
    self.tf.delegate = self;
    self.tf.placeholder = @"发表你的评论...";
    self.tf.frame = CGRectMake(kScreenWidth*0.05, self.v.frame.size.height*0.13, kScreenWidth*0.75, self.v.frame.size.height*0.7);
    self.tf.backgroundColor = [UIColor clearColor];
    _tf.returnKeyType = UIReturnKeySend;
    
    UIImageView *imageView = [[UIImageView alloc] initWithImage:[UIImage resizableImage:@"evaluateBg.png"]];
    CGRect rect = _tf.frame;
    rect.origin.x -= 5;
    rect.size.width += 10;
    imageView.frame = rect;
    [self.v addSubview:imageView];
    
    [self.v addSubview:self.tf];
    
    UIButton *send = [UIButton buttonWithType:UIButtonTypeCustom];
    send.frame = CGRectMake(self.tf.right+self.v.frame.size.width*0.02,0 , kScreenWidth*0.18, self.v.frame.size.height);
    [send setTitle:@"发送" forState:UIControlStateNormal];
    [send setTitleColor:[UIColor redColor] forState:UIControlStateNormal ];
    [send addTarget:self action:@selector(comment:) forControlEvents:UIControlEventTouchUpInside];
    [send setTitleColor:[UIColor colorWithRed:131/255.0 green:131/255.0 blue:131/255.0 alpha:1] forState:UIControlStateNormal];
    [self.v addSubview:send];
    
    [self getNetworkDataWithLoadMore:NO];
    
    __weak CommentViewController *commentController = self;
    [_tv addHeaderWithCallback:^{
        [commentController getNetworkDataWithLoadMore:NO];
    }];
    
    [_tv addFooterWithCallback:^{
        [commentController getNetworkDataWithLoadMore:YES];
    }];
    
    //表头数据源
    info = [[Info alloc] init];
    if (self.emodel != nil) {
        info.name = self.emodel.title;
        info.image = [self.emodel.pics[0] objectForKey:@"path"];
        info.infos = [self.emodel.pics[0] objectForKey:@"txt"];
        info.xin = self.emodel.favNum;
        NSDate *date = [NSDate dateWithTimeIntervalSince1970:[self.emodel.time floatValue]/1000];
        NSDateFormatter *df = [[NSDateFormatter alloc] init];
        [df setDateFormat:@"yyyy年MM月dd日"];
        NSString *regStr = [df stringFromDate:date];
        NSLog(@"dateStr = %@",regStr);
        info.time = regStr;
        info.comment = self.emodel.commentNum;
    }else{
        info.name = self.imodel.title;
        info.image = @"nourl";
        info.infos = self.imodel.descrip;
        info.xin = self.imodel.zanCount;
        info.time = self.imodel.time;
        info.comment = self.imodel.commentCount;
    }
}

-(void)likeStatusRefresh:(NSNotification *)noti
{
    NSArray *array = noti.object;
    if (array.count == 3)
    {
        IndexModel *indexModel = array[0];
        EventModel *eventModel = array[1];
        enum likeType type = [array[2] intValue];
        
        switch (type)
        {
            case likeType_Story:
            {
                self.imodel.zanCount = indexModel.zanCount;
                self.imodel.isZan = indexModel.isZan;
                info.xin = indexModel.zanCount;
            }
                break;
            case likeType_Event:
            {
                self.emodel.favNum = eventModel.favNum;
                self.emodel.isZan = eventModel.isZan;
                info.xin = eventModel.favNum;
            }
                break;
                
            default:
                break;
        }
        
        [_tv reloadData];
    }
}

-(void)refreshCommentCount
{
    if (self.emodel != nil) {
        self.emodel.commentNum = info.comment;
        
    }else{
        self.imodel.commentCount = info.comment;
    }
    dispatch_async(dispatch_get_main_queue(), ^{
        if (_delegate && [_delegate respondsToSelector:@selector(commentCountRefresh)])
        {
            [_delegate commentCountRefresh];
        }
    });
}

-(void)getNetworkDataWithLoadMore:(BOOL)isLoadMore
{
    if([self.isStory isEqualToString:@"story"]){
        NSString *urlstring = [NSString stringWithFormat:@"%@/WeiXiaoComment/api/v1/story/%@/comment/%lu/20",BASE_URL,self.storyId,isLoadMore?_data.count:0];
        NSURL *url = [NSURL URLWithString:urlstring];
        NSMutableURLRequest *request = [[NSMutableURLRequest alloc]initWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:10];
        [request setHTTPMethod:@"Get"];
        NSOperationQueue *queue = [[NSOperationQueue alloc] init];
        [NSURLConnection sendAsynchronousRequest:request queue:queue completionHandler:^(NSURLResponse *response, NSData *data, NSError *connectionError) {
            if (data != nil)
            {
                NSArray *array = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableLeaves error:Nil];
                NSMutableArray *tempArray = [NSMutableArray array];
                for (NSDictionary *dic in array ) {
                    NSLog(@"%@",dic);
                    //评论数据源
                    comment *commentuser = [[comment alloc]init];
                    NSString *sid = [dic objectForKey:@"id"];
                    [_useid addObject:sid];
                    NSString *sname = [dic objectForKey:@"fromAccountNickName"];
                    if ([sname isKindOfClass:[NSNull class]]) {
                        commentuser.userName = @"游客";
                    }
                    else
                    {
                        commentuser.userName = sname;
                    }
                    
                    NSString *s = [dic objectForKey:@"fromAccountAva"];
//                    NSString *urlStr = [NSString stringWithFormat:@"%@/%@",BASE_URL,s];
                    commentuser.userImageStr = s;
                    
                    NSString *stext = [dic objectForKey:@"text"];
                    
                    NSLog(@"----------------------------------------%@",stext);
                    if ([stext isKindOfClass:[NSNull class]]) {
                        commentuser.comments = @"评论为空";
                    }
                    
                    else
                    {
                        commentuser.comments = stext;
                    }
                    
                    double time = [[dic objectForKey:@"time"] doubleValue]/1000;
                    
                    NSDate *date = [NSDate dateWithTimeIntervalSince1970:time];
                    NSString *dateString = [NSDate stringForRecentDate:date];
                    
                    commentuser.time = dateString;
                    
                    
                    NSDictionary *d = [dic objectForKey:@"toComment"];
                    if ([d isKindOfClass:[NSNull class]]) {
                        NSLog(@"回复为空");
                    }
                    else
                    {
                        commentuser.replyName = d[kFromAccountNickName];
                        commentuser.replyContent = d[kText];
                    }
                    [tempArray addObject:commentuser];
                    
                }
                NSLog(@"hhhhhhhhhhhhh<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<%@",_useid);
                if (isLoadMore)
                {
                    [_data addObjectsFromArray:tempArray];
                }
                else
                {
                    _data = tempArray;
                }
                [_tv headerEndRefreshing];
                [_tv footerEndRefreshing];
                [self performSelectorOnMainThread:@selector(reloadtvData) withObject:nil waitUntilDone:NO];
            }
        }];
    }else{
        //to do event comment
        NSString *urlstring = [NSString stringWithFormat:@"%@/WeiXiaoComment/api/v1/story/%@/item/%@/comment/%lu/20",BASE_URL,self.storyId,self.eventId,_data.count];
        NSURL *url = [NSURL URLWithString:urlstring];
        NSMutableURLRequest *request = [[NSMutableURLRequest alloc]initWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:10];
        [request setHTTPMethod:@"Get"];
        NSOperationQueue *queue = [[NSOperationQueue alloc] init];
        [NSURLConnection sendAsynchronousRequest:request queue:queue completionHandler:^(NSURLResponse *response, NSData *data, NSError *connectionError) {
            NSArray *array = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableLeaves error:Nil];
            NSMutableArray *tempArray = [NSMutableArray array];
            for (NSDictionary *dic in array ) {
                NSLog(@"%@",dic);
                //评论数据源
                comment *commentuser = [[comment alloc]init];
                NSString *sid = [dic objectForKey:@"id"];
                [_useid addObject:sid];
                NSString *sname = [dic objectForKey:@"fromAccountNickName"];
                if ([sname isKindOfClass:[NSNull class]]) {
                    commentuser.userName = @"游客";
                }
                else
                {
                    commentuser.userName = sname;
                }
                
                NSString *s = [dic objectForKey:@"fromAccountAva"];
                //                    NSString *urlStr = [NSString stringWithFormat:@"%@/%@",BASE_URL,s];
                commentuser.userImageStr = s;
                
                NSString *stext = [dic objectForKey:@"text"];
                
                NSLog(@"----------------------------------------%@",stext);
                if ([stext isKindOfClass:[NSNull class]]) {
                    commentuser.comments = @"评论为空";
                }
                
                else
                {
                    commentuser.comments = stext;
                }
                
                double time = [[dic objectForKey:@"time"] doubleValue]/1000;
                
                NSDate *date = [NSDate dateWithTimeIntervalSince1970:time];
                NSString *dateString = [NSDate stringForRecentDate:date];
                
                commentuser.time = dateString;
                
                
                NSDictionary *d = [dic objectForKey:@"toComment"];
                if ([d isKindOfClass:[NSNull class]]) {
                    NSLog(@"回复为空");
                }
                else
                {
                    commentuser.replyName = d[kFromAccountNickName];
                    commentuser.replyContent = d[kText];
                }
                [tempArray addObject:commentuser];
                
            }
            
            if (isLoadMore)
            {
                [_data addObjectsFromArray:tempArray];
            }
            else
            {
                _data = tempArray;
            }
            [_tv headerEndRefreshing];
            [_tv footerEndRefreshing];
            [self performSelectorOnMainThread:@selector(reloadtvData) withObject:nil waitUntilDone:NO];
            
        }];
    }
}

-(void)showHud:(NSString *)title{
    if (_hud == Nil) {
        _hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    }
    _hud.labelText = title;
    _hud.dimBackground  =YES;
}

-(void)hideHud{
    [_hud hide:YES];
    _hud = nil;
}
-(void)dian:(UIGestureRecognizer*)ge
{
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3];
    [UIView setAnimationCurve:UIViewAnimationCurveEaseOut];
    self.v.frame = CGRectMake(0, kScreenHeight*0.9-64,kScreenWidth ,kScreenHeight*0.1 );
    [UIView commitAnimations];
    self.tf.text = nil;
    [self.tf resignFirstResponder];
}
-(void)reloadtvData{
    [_tv reloadData];
    [self hideHud];
}

- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3];
    [UIView setAnimationCurve:UIViewAnimationCurveEaseOut];
    self.v.frame = CGRectMake(0, kScreenHeight*0.9-64-250,kScreenWidth ,kScreenHeight*0.1 );
    [UIView commitAnimations];
    
    return YES;

}

-(BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [self comment:nil];
    return YES;
}

-(void)comment:(UIButton*)sender
{
    if ([self.tf.text length] > 0)
    {
        NSLog(@"TExt =============================%@",_useid);
        NSLog(@"count==============================%d",_myid);
        //评论故事字典
        NSMutableDictionary *paras =[NSMutableDictionary dictionary];
        [paras setObject:_storyId forKey:@"storyId"];
        [paras setObject:[PSConfigs shareConfigs].usn forKey:@"fromAccountUsn"];
        [paras setObject:[PSConfigs shareConfigs].nickname forKey:@"fromAccountNickName"];
        [paras setObject:[PSConfigs shareConfigs].image forKey:@"fromAccountAva"];
        [paras setObject:self.tf.text forKey:@"text"];
        
        //发表评论请求
        NSString *s = [NSString stringWithFormat:@"/WeiXiaoComment/api/v1/story/%@/comment",_storyId];
        //回复评论字典
        if (_isReply) {
            
            [paras setObject:@18301625870 forKey:@"toAccountUsn"];
            [paras setObject:@"maimeng" forKey:@"toAccountNickName"];
            [paras setObject:@"" forKey:@"toAccountAva"];
            [paras setObject:self.tf.text forKey:@"text"];
            
            //回复评论请求
            s =[s stringByAppendingFormat:@"/%@/reply/",_useid[_myid]];
            NSLog(@"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<%@",_useid[_myid]);
        }
        
        [self showHud:@"正在发表..."];
        [DataService requestWithURL:s params:paras httpMethod:@"POST" block1:^(id result) {
            [self requestNewComment];
            
        } failLoad:^(id result) {
            
        }];
        
        _isReply = NO;
        [UIView beginAnimations:nil context:nil];
        [UIView setAnimationDuration:0.2];
        self.v.frame = CGRectMake(0, kScreenHeight*0.9-64,kScreenWidth ,kScreenHeight*0.1 );
        [UIView commitAnimations];
        self.tf.text = nil;
        [self.tf resignFirstResponder];
    }
}

-(void)requestNewComment{
    _useid = [NSMutableArray array];
    NSString *urlstring = [NSString stringWithFormat:@"%@/WeiXiaoComment/api/v1/story/%@/comment/0/100",BASE_URL,_storyId];
    NSURL *url = [NSURL URLWithString:urlstring];
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc]initWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:10];
    [request setHTTPMethod:@"Get"];
    NSOperationQueue *queue = [[NSOperationQueue alloc] init];
    [NSURLConnection sendAsynchronousRequest:request queue:queue completionHandler:^(NSURLResponse *response, NSData *data, NSError *connectionError) {
        NSArray *array = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableLeaves error:Nil];
        NSMutableArray *tempArray = [NSMutableArray array];
        for (NSDictionary *dic in array ) {
            NSLog(@"%@",dic);
            //评论数据源
            comment *commentuser = [[comment alloc]init];
            NSString *sid = [dic objectForKey:@"id"];
            [_useid addObject:sid];
            NSString *sname = [dic objectForKey:@"fromAccountNickName"];
            if ([sname isKindOfClass:[NSNull class]]) {
                commentuser.userName = @"无昵称";
            }
            else
            {
                commentuser.userName = sname;
            }
            
            NSString *s = [dic objectForKey:@"fromAccountAva"];
            //                    NSString *urlStr = [NSString stringWithFormat:@"%@/%@",BASE_URL,s];
            commentuser.userImageStr = s;
            
            NSString *stext = [dic objectForKey:@"text"];
            
            NSLog(@"----------------------------------------%@",stext);
            if ([stext isKindOfClass:[NSNull class]]) {
                commentuser.comments = @"评论为空";
            }
            else
            {
                commentuser.comments = stext;
            }
            
            double time = [[dic objectForKey:@"time"] doubleValue]/1000;
            
            NSDate *date = [NSDate dateWithTimeIntervalSince1970:time];
            NSString *dateString = [NSDate stringForRecentDate:date];
            
            commentuser.time = dateString;
            
            
            NSDictionary *d = [dic objectForKey:@"toComment"];
            if ([d isKindOfClass:[NSNull class]]) {
                NSLog(@"回复为空");
            }
            else
            {
                commentuser.replyName = d[kFromAccountNickName];
                commentuser.replyContent = d[kText];
            }
            [tempArray addObject:commentuser];
            
        }
        //给Model源数组赋值
        _data = tempArray;
        NSLog(@"_)data.count = %d",_data.count);
        info.comment = [NSString stringWithFormat:@"%lu",_data.count];
        [self refreshCommentCount];
        [self performSelectorOnMainThread:@selector(reloadtvData) withObject:nil waitUntilDone:NO];
    }];
}
-(void)back:(UIButton*)sender
{
    NSLog(@"返回");

}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row == 0) {
        return 202;
    }
    else
    {
        comment *commentuser = _data[indexPath.row-1];
        return [CommentViewCell getCellHeightWithComment:commentuser];
    }

}
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _data.count+1;
   
}

-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row == 0) {
        HeaderViewCell *cell = [[[NSBundle mainBundle] loadNibNamed:@"HeaderViewCell" owner:self options:nil] lastObject];
        cell.indexModel = self.imodel;
        cell.eventModel = self.emodel;
        cell.info = info;
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell;
        
    }
   else{
        static NSString *idenfier = @"cell1";
        CommentViewCell *cell = [tableView dequeueReusableCellWithIdentifier:idenfier];
        if (!cell) {
             cell = [[[NSBundle mainBundle]loadNibNamed:@"CommentViewCell" owner:self options:nil]lastObject];
        }
       cell.myrow = 100+indexPath.row-1;
       cell.comment = _data[indexPath.row-1];
       NSLog(@"fhf--------------------TAG=======%d",cell.commentBtn.tag);
        return cell;
   }
}

#pragma mark -UIScrollViewDelegate
-(void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    [self dian:nil];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    if (self.isViewLoaded && !self.view.window)
    {
        self.tf = nil;
        self.v = nil;
        self.tv = nil;
        self.view = nil;
        _data = nil;
    }
}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
